<?php
namespace frontend\controllers;
use common\models\OrderGoods;
use common\models\OrderInfo;
use frontend\components\AjaxReturn;
use frontend\components\AlipaySubmit;
use frontend\models\Cart;
use frontend\models\Payment;
use frontend\models\Region;
use frontend\models\User;
use frontend\models\UserAddress;
use yii;
use common\models\Category;

class OrderController extends \yii\web\Controller
{
    public $userId;
    public $layout = 'navmain';
    public function init()
    {
        // 验证是否登录
        if(Yii::$app->user->isGuest)
        {
            return $this->goBack();
        }
        $this->userId = Yii::$app->user->getId();
    }
    public function behaviors()
    {
        // 查询主导航
        $navigation = Category::getNavigation();
        $this->view->params['navigation'] = $navigation;
        return parent::behaviors(); // TODO: Change the autogenerated stub
    }
    /**
     * 下单
     * @return string
     */
    public function actionCheckout()
    {
        // 判断是否有收货地址
        if(!$address = UserAddress::getAddress($this->userId))
        {
            yii::$app->response->redirect(['order/consignee']);
        }
        // 查询购物车商品
        $cart = Cart::getCartList();
        if(count($cart['goodsList']) == 0)
        {
            $this->goBack();
        }
        // 查询支付方式
        $paies = Payment::getPay();
        return $this->render('checkout',['address'=>$address,'cart'=>$cart,'paies'=>$paies]);
    }
    /**
     * 填写收货信息
     *
     * @return string
     */
    public function actionConsignee()
    {
        $model = new UserAddress();
        if(yii::$app->request->isPost)
        {
            $model->user_id = $this->userId;
            if($model->load(yii::$app->request->post()) && $model->validate())
            {
                $result = $model->save();
                if($result)
                {
                    yii::$app->response->redirect(['order/checkout']);
                }
                else
                {
                    echo 'save faill';
                }
            }
        }


        $region = Region::getDropDownRegion();

        return $this->render('consignee',['userAdd'=>$model,'region'=>$region]);
    }
   /**
    *四级联动
    */
    public function actionRegion()
    {
        $rid = intval(Yii::$app->request->get('rid'));
        if($rid)
        {
            $region = Region::getDropDownRegion($rid);
            (new AjaxReturn(AjaxReturn::SUCCESS,'OK',$region))->send();
        }
        (new AjaxReturn(AjaxReturn::ERROR,'参数有误'))->send();
    }

    /**
     * 下单
     */
    public function actionOrderDown()
    {
        $aid = Yii::$app->request->get('aid');
        $pid = Yii::$app->request->get('pid');
        $orderInfo = [];
        // 支付方式
        $pay = Payment::getPayInfo($pid);
        // 选中的收获地址
        $address = UserAddress::getInfo($aid);
        // 订单商品与金额
        $cart = Cart::getCartList();
        // 生产订单号
        $orderInfo['order_sn'] = OrderInfo::createOrderSn();
        // 下单
        $result = (new OrderInfo)->createOrder(array_merge($orderInfo,$address,$cart,$pay));
        // 清除购物车
//        Cart::clearAll();
        // 响应
        $result->send();
    }
    public function actionAlipay()
    {
        $get = Yii::$app->request->get();

    }
    public  function  actionDelete(){
        $id=intval(yii::$app->request->get('id'));
        $del=  (new   UserAddress)->find()->where(['address_id'=>$id])->one();
        $res=$del->delete();
        if($res){
          echo 1;
        }

    }
//修改收货人信息
    public function actionUpdate()
    {
        $userAdd = new UserAddress();
        $id = yii::$app->request->get('id','');
        $userAdd = UserAddress::findOne($id);
        $address = UserAddress::getAddress($this->userId);
        $region = Region::getDropDownRegion();
        if(yii::$app->request->post())
        {
            $post = yii::$app->request->post();
            if($userAdd->load($post))
            {
                $res = $userAdd->save();
                if($res)
                {
                    $this->redirect(['order/checkout']);
                }
                else
                {
                    $this->redirect(['order/update']);
                }
            }
        }
        return $this->render('update',['userAdd'=>$userAdd,'address'=>$address,'region'=>$region]);
    }

    public $alipayConfig;
    public function actionAlipayUrl()
    {
        $this->alipayConfig = Yii::$app->params['alipay'];
        //支付类型
        $payment_type = "1";
        //必填，不能修改
        //服务器异步通知页面路径
        $notify_url = "http://商户网关地址/create_direct_pay_by_user-PHP-UTF-8/notify_url.php";
        //需http://格式的完整路径，不能加?id=123这类自定义参数

        //页面跳转同步通知页面路径
        $return_url = "http://dev.front.com/user/myorder";
        //需http://格式的完整路径，不能加?id=123这类自定义参数，不能写成http://localhost/

        //商户订单号
        $out_trade_no = '201810261099';
        //商户网站订单系统中唯一订单号，必填

        //订单名称
        $subject = '服装';
        //必填

        //付款金额
        $total_fee ='0.01' ;
        //必填

        //订单描述

        $body = '';
        //商品展示地址
        $show_url = '万家创业园7202';
        //需以http://开头的完整路径，例如：http://www.商户网址.com/myorder.html

        //防钓鱼时间戳
        $anti_phishing_key = "";
        //若要使用请调用类文件submit中的query_timestamp函数

        //客户端的IP地址
        $exter_invoke_ip = "";
        //非局域网的外网IP地址，如：221.0.0.1



        //构造要请求的参数数组，无需改动
        $parameter = array(
            "service" => "create_direct_pay_by_user",
            "partner" => trim($this->alipayConfig['partner']),
            "seller_email" => trim($this->alipayConfig['seller_email']),
            "payment_type"	=> $this->alipayConfig['sign_type'],
            "notify_url"	=> $notify_url,
            "return_url"	=> $return_url,
            "out_trade_no"	=> $out_trade_no,
            "subject"	=> $subject,
            "total_fee"	=> $total_fee,
            "body"	=> $body,
            "show_url"	=> $show_url,
            "anti_phishing_key"	=> $anti_phishing_key,
            "exter_invoke_ip"	=> $exter_invoke_ip,
            "_input_charset"	=> trim(strtolower($this->alipayConfig['input_charset']))
        );

        //建立请求
        $alipaySubmit = new AlipaySubmit($this->alipayConfig);

        $html_text = $alipaySubmit->buildRequestForm($parameter,"get", "确认");
        return $html_text;

    }

    public function actionMyorder()
    {
        $this->layout = 'main';
        $order = OrderInfo::getMyOrder($this->userId);
        return $this->render('myorder');
    }
}